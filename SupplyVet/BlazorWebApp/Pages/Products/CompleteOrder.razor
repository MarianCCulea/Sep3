@page "/completeorder/{Id:int}"
@using BlazorWebApp.Model.Domain
@using BlazorWebApp.Shared
@using Microsoft.AspNetCore.Components;
@inject IUserData userdata
@inject IJSRuntime jsRuntime
@inject NavigationManager manager
@attribute [Authorize(Policy = "MustBeUser")]

<h1>Add new order</h1>

<EditForm Model="@order" OnValidSubmit="@ValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-group">
        <label for="adress">Adress:</label>
        <InputText Class="form-control" id="adress" @bind-Value="order.adress" />
    </div>
    <div class="form-group">
        <label for="invoiceadress">Invoice Adress:</label>
        <InputText Class="form-control" id="invoiceadress" @bind-Value="order.invoiceadress" />
    </div>
    <div class="form-group">
        <label for="phone">Phone:</label>
        <InputNumber Class="form-control" id="phone" @bind-Value="order.phone" />
        <ValidationMessage For="@(() => order.phone)" />
    </div>
    <button type="submit" class="btn btn-primary">Place Order</button>
    <span>Total Price is @order.totalprice;-</span>
    <span id="json"></span>
</EditForm>


@code {
    [Parameter]
    public int Id { get; set; }
    private Order order = new Order();
    

    protected override void OnInitialized()
    {

        order.items = userdata.CartItems();
        order.itemsCount = userdata.GetCount();
        order.calculatetotalprice();

    }


    private async Task ValidSubmit()
    {
        Console.WriteLine(order.adress + order.invoiceadress);
        var response = await userdata.PostOrderAsync(order.adress, order.invoiceadress, order.phone, Id);
        if (response.Equals("true"))
        {
            userdata.ClearOrder();
            manager.NavigateTo($"/products/{Id}");
        }
        else
        {
            await jsRuntime.InvokeVoidAsync("setElementTextById", "json", "Something went wrong");
        }
        
    }
}
